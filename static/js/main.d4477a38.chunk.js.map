{"version":3,"sources":["serviceWorker.js","components/Clode.jsx","components/Navigation.jsx","schedule.js","components/Calendar.jsx","components/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Clode","state","allowDropdown","getResultsMessage","canAddClasses","props","values","length","maxClasses","handleItemAdd","event","clode","handleValueChange","value","setState","handleSearchChange","a","b","searchQuery","handleSearch","list","query","toUpperCase","filter","item","text","startsWith","slice","options","map","v","allClasses","name","push","myRef","React","createRef","Dropdown","ref","this","button","clearable","fluid","placeholder","multiple","selection","floating","labeled","defaultOpen","className","icon","openOnFocus","closeOnChange","search","onSearchChange","onChange","onClick","handleClick","noResultsMessage","lazyLoad","Component","Navigation","Header","Segment","inverted","attached","textAlign","Image","inline","size","centered","circular","src","Divider","hidden","Container","json","key","Schedule","classes","freetimes","M","T","W","R","F","teachers","startTime","endTime","section","newSchedules","allCourses","teacher","crn","Object","keys","some","d","start","lecture_types","lab_types","lectures","c","t","toLowerCase","type","labs","lecture","canAdd","newSchedule","clone","replaceTimeSlots","day","originalTime","newTime","end","Math","min","max","splice","console","log","ns","labSchedules","sameTeacherLabs","l","foundCourse","find","course","instructors","i","indexOf","lab","credits","flat","JSON","parse","stringify","schedule","crns1","crns2","slots","args","times","availableTimeSlot","findIndex","timeSlot","undefined","MySlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","Calendar","schedules","scheduleIndex","colors","scrollTime","classPopup","filterPopup","days","copyText","componentDidMount","generateSchedules","componentDidUpdate","prevProps","prevState","snapshot","onEventClick","info","classObj","extendedProps","renderModal","Modal","onClose","Content","Description","join","Actions","Popup","content","trigger","Button","open","split","pop","Icon","link","catalog","marks","defaultValue","step","valueLabelDisplay","valueLabelFormat","x","durationFromMinutes","onChangeCommitted","e","Checkbox","label","checked","Fragment","loadedCourses","inputtedCourses","Schedules","gc","next","allNew","fetch","fetchedCourse","sc","addClass","handleCourseLoad","loading","finishedLoading","filterSchedules","equals","scrollToDuration","currentCourses","s","createEvents","events","title","daysOfWeek","borderColor","classNames","renderedIndex","getCustomButtons","click","prev","duration","currentParts","n","Number","currentMinutes","newParts","newMinutes","newDuration","current","getApi","scrollToTime","Promise","setTimeout","generator","arr","creditCount","reduce","crns","colorText","as","labelPosition","navigator","clipboard","writeText","Label","basic","pointing","href","minTime","slotLabelInterval","defaultView","plugins","timeGridPlugin","weekends","header","center","right","now","Date","columnHeaderFormat","weekday","titleFormat","customButtons","allDaySlot","eventClick","minutes","includeSeconds","hh","floor","mm","App","calendarLoading","onLoadingFinished","onCoursesLoad","style","margin","overflowY","compact","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4477a38.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React, { Component } from 'react';\nimport { Dropdown } from 'semantic-ui-react'\n\nclass Clode extends Component {\n    state = {\n        allowDropdown: false\n    }\n    constructor() {\n        super()\n        this.myRef = React.createRef();\n    }\n\n    render() {\n        return (\n            <Dropdown\n                ref={this.myRef}\n                button\n                clearable\n                item\n                fluid\n                placeholder='Search...'\n                multiple\n                selection\n                floating\n                labeled\n                defaultOpen={false}\n                className='icon'\n                icon='book'\n                openOnFocus={false}\n                closeOnChange={true}\n                search={this.handleSearch}\n                onSearchChange={this.handleSearchChange}\n                onChange={this.handleItemAdd}\n                onClick={this.handleClick}\n                value={this.props.values}\n                noResultsMessage={this.getResultsMessage()}\n                options={this.options()}\n                lazyLoad={true}\n            />\n        );\n    }\n\n    getResultsMessage = () => {\n        if (!this.canAddClasses()) return \"Maximum number of classes reached\";\n        if (!this.state.allowDropdown) return <p>Start typing a course name (i.e. <code>ECE 100</code>)</p>\n        return \"No classes found\";\n    }\n\n    canAddClasses = () => {\n        return this.props.values.length < this.props.maxClasses\n    }\n\n    handleItemAdd = (event, clode) => {\n        this.props.handleValueChange(clode.value);\n        this.setState({ allowDropdown: false })\n    }\n\n    handleSearchChange = (a, b) => {\n        if (b.searchQuery.length > 0 && !this.state.allowDropdown) this.setState({ allowDropdown: true })\n        else if (b.searchQuery.length === 0) this.setState({ allowDropdown: false })\n    }\n\n    handleSearch = (list, query) => {\n        if (!this.canAddClasses()) return [];\n        query = query.toUpperCase();\n        const newList = list.filter(item => item.text.startsWith(query)).slice(0, 5);\n        return newList;\n    }\n\n    options = () => {\n        if (!this.state.allowDropdown) return this.props.values.map(v => {\n            return { text: v, value: v }\n        });\n        // console.log(this.state.query, /OPTIONQUERY/)\n        let options = [];\n        for (let name of this.props.allClasses) {\n            options.push({ text: name, value: name })\n        }\n        return options;\n    }\n}\n\nexport default Clode;","import React, { Component } from 'react';\n// import { ProgressBar } from 'react-bootstrap';\nimport Clode from \"./Clode\"\nimport json from \"../json/allClasses.json\"\nimport { Header, Container, Image, Divider, Segment } from \"semantic-ui-react\"\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <Header>\n                <Segment inverted attached=\"top\">\n                    <Header textAlign=\"center\">\n                        <Image inline size=\"mini\" centered circular src=\"favicon.ico\" /> IIT Schedule Generator\n                    <Divider hidden></Divider>\n                        <Container>\n                            <Clode\n                                values={this.props.values}\n                                handleValueChange={this.props.handleValueChange}\n                                allClasses={json}\n                                maxClasses={10}\n                                key=\"clode\"\n                            />\n                        </Container>\n                    </Header>\n                </Segment>\n            </Header>\n        );\n    }\n}\n\nexport default Navigation;","let Schedule = class Schedule {\n    constructor(classes = [], freetimes = { M: [[0, 1440]], T: [[0, 1440]], W: [[0, 1440]], R: [[0, 1440]], F: [[0, 1440]] }, teachers = [], startTime = 1440, endTime = 0) {\n        this.classes = classes;\n        this.freetimes = freetimes;\n        this.teachers = teachers;\n        this.startTime = startTime;\n        this.endTime = endTime;\n    }\n\n    addClass(section) {\n        let newSchedules = [];\n\n        let allCourses = [];\n        for (let teacher in section) {\n            for (let crn in section[teacher]) {\n                let days = Object.keys(section[teacher][crn].classes);\n                if (!days.some(d => section[teacher][crn].classes[d].start === \"TBA\")) allCourses.push(section[teacher][crn]);\n            }\n        }\n\n        let lecture_types = [\"Lecture\", \"Lecture/Lab\", \"Studio\", \"Clinical\", \"Dummy Course\", \"Externship\", \"Independent Study/Research\", \"Internship\", \"Seminar\", \"Workshop\"];\n        let lab_types = [\"Lab\", \"Recitation/Discussion\"];\n\n        let lectures = allCourses.filter(c => lecture_types.some(t => t.toLowerCase() === c.type.toLowerCase()));\n        let labs = allCourses.filter(c => lab_types.some(t => t.toLowerCase() === c.type.toLowerCase()));\n\n\n\n        if (lectures.length > 0) {\n            for (let lecture of lectures) {\n                if (this.canAdd(lecture) !== false) {\n                    let newSchedule = this.clone();\n                    let replaceTimeSlots = this.canAdd(lecture);\n                    for (let crn in replaceTimeSlots) {\n                        for (let day in replaceTimeSlots[crn]) {\n                            //This array stuff is absolutely a mess\n                            /*\n                                Basically:\n                                [0,1440] <- \"originalTime\" - this is a block of free time in the current schedule\n                                [840, 910] <- \"newTime\" - this is the class time\n                                [0, 840][910, 1440] <- the new freetimes\n                            */\n                            let originalTime = [newSchedule.freetimes[day][replaceTimeSlots[crn][day]][0], newSchedule.freetimes[day][replaceTimeSlots[crn][day]][1]];\n                            let newTime = [lecture.classes[day].start, lecture.classes[day].end];\n\n                            newSchedule.startTime = Math.min(newTime[0], newSchedule.startTime);\n                            newSchedule.endTime = Math.max(newTime[1], newSchedule.endTime);\n                            newSchedule.freetimes[day].splice(replaceTimeSlots[crn][day], 1, [originalTime[0], newTime[0]], [newTime[1], originalTime[1]]);\n                        }\n                    }\n                    newSchedule.classes.push(lecture);\n                    newSchedules.push(newSchedule);\n                }\n            }\n        }\n        console.log(newSchedules.length, /NEWSCHEDULESLENGTH/)\n        if (labs.length > 0) {\n            let newerSchedules = newSchedules.map(ns => {\n                let labSchedules = [];\n                let sameTeacherLabs = labs.filter(l => {\n                    let foundCourse = ns.classes.find(c => c.course === l.course);\n                    return (l.instructors.some(i => foundCourse.instructors.indexOf(i) !== -1))\n                });\n                for (let lab of sameTeacherLabs) {\n                    if (ns.canAdd(lab) !== false) {\n                        let newSchedule = ns.clone();\n                        let replaceTimeSlots = ns.canAdd(lab);\n                        for (let crn in replaceTimeSlots) {\n                            for (let day in replaceTimeSlots[crn]) {\n                                //This array stuff is absolutely a mess\n                                /*\n                                    Basically:\n                                    [0,1440] <- \"originalTime\" - this is a block of free time in the current schedule\n                                    [840, 910] <- \"newTime\" - this is the class time\n                                    [0, 840][910, 1440] <- the new freetimes\n                                */\n                                let originalTime = [newSchedule.freetimes[day][replaceTimeSlots[crn][day]][0], newSchedule.freetimes[day][replaceTimeSlots[crn][day]][1]];\n                                let newTime = [lab.classes[day].start, lab.classes[day].end];\n\n                                newSchedule.startTime = Math.min(newTime[0], newSchedule.startTime);\n                                newSchedule.endTime = Math.max(newTime[1], newSchedule.endTime);\n\n                                newSchedule.freetimes[day].splice(replaceTimeSlots[crn][day], 1, [originalTime[0], newTime[0]], [newTime[1], originalTime[1]]);\n                            }\n                        }\n\n                        lab.credits = 0; // All of the credits should be in the normal class\n                        newSchedule.classes.push(lab);\n                        labSchedules.push(newSchedule);\n                    }\n                }\n                return labSchedules;\n            });\n            return newerSchedules.flat();\n        } else {\n            return newSchedules;\n        }\n    }\n\n    clone() {\n        let clonedClasses = JSON.parse(JSON.stringify(this.classes));\n        let clonedFreetimes = JSON.parse(JSON.stringify(this.freetimes));\n        let clonedTeachers = JSON.parse(JSON.stringify(this.teachers));\n        return new Schedule(clonedClasses, clonedFreetimes, clonedTeachers, this.startTime, this.endTime);\n    }\n\n    equals(schedule) {\n        if (this.classes.length !== schedule.classes.length) return false;\n        let crns1 = this.classes.map(c => c.crn);\n        let crns2 = schedule.classes.map(c => c.crn);\n        return !crns1.some(c => crns2.indexOf(c) === -1);\n    }\n\n    getcrns() {\n        return this.classes.map(c => c.crn);\n    }\n\n    canAdd(...args) {\n        let slots = {};\n        for (let course of args) {\n            let times = course.classes;\n            for (let day in times) {\n                let availableTimeSlot = this.freetimes[day].findIndex(timeSlot => {\n                    return (timeSlot[0] <= times[day].start && timeSlot[1] >= times[day].end);\n                });\n\n                if (availableTimeSlot !== undefined && availableTimeSlot !== -1) {\n                    if (!slots[course.crn]) slots[course.crn] = {};\n                    slots[course.crn][day] = availableTimeSlot;\n                } else return false;\n            }\n        }\n\n\n        return slots;\n\n    }\n}\n\nexport default Schedule;\n","import React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport Schedule from \"../schedule\";\nimport \"../css/calendar.css\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport { Slider } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Modal, Button, Icon, Popup, Checkbox, Label, Divider } from \"semantic-ui-react\";\n\nconst MySlider = withStyles({\n    root: {\n        color: \"#CB0000\",\n        height: 8,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: \"#fff\",\n        border: \"2px solid currentColor\",\n        marginTop: -8,\n        marginLeft: -12,\n        \"&:focus,&:hover,&$active\": {\n            boxShadow: \"inherit\",\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: \"calc(-50% + 4px)\",\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(Slider);\n\nclass Calendar extends Component {\n    state = {\n        schedules: [],\n        scheduleIndex: 0,\n        colors: {},\n        scrollTime: \"06:00:00\",\n        classPopup: null,\n        filterPopup: null,\n        filter: { min: 360, max: 1440 },\n        days: { M: true, T: true, W: true, R: true, F: true },\n        copyText: \"Copy CRNs\",\n    };\n\n    constructor() {\n        super();\n        this.myRef = React.createRef();\n    }\n\n    render() {\n        let creditCount = this.state.schedules[this.state.scheduleIndex] ? this.state.schedules[this.state.scheduleIndex].classes.reduce((a, b) => a + b.credits, 0) : 0;\n        let crns = this.state.schedules[this.state.scheduleIndex] ? this.state.schedules[this.state.scheduleIndex].classes.map((c) => c.crn).join(\", \") : \"\";\n        let colorText = this.state.copyText === \"Copied!\" ? \"green\" : creditCount > 18 ? \"red\" : \"black\";\n        return (\n            <React.Fragment>\n                <Button\n                    as=\"div\"\n                    labelPosition=\"right\"\n                    onClick={() => {\n                        navigator.clipboard.writeText(crns);\n                        this.setState({ copyText: \"Copied!\" });\n                        setTimeout(() => {\n                            this.setState({ copyText: \"Copy CRNs\" });\n                        }, 1000);\n                    }}\n                >\n                    <Button color={colorText}>\n                        <Icon name=\"copy\" />\n                        {this.state.copyText}\n                    </Button>\n                    <Label as=\"a\" basic color={colorText} pointing=\"left\">\n                        {creditCount} credits\n                    </Label>\n                </Button>\n                <Button icon=\"github\" href=\"https://github.com/camero2734/iitschedulegen/\" color=\"black\" />\n                <Divider></Divider>\n                <FullCalendar\n                    ref={this.myRef}\n                    minTime={\"06:00:00\"}\n                    slotLabelInterval={\"02:00:00\"}\n                    defaultView=\"timeGridWeek\"\n                    plugins={[timeGridPlugin]}\n                    weekends={false}\n                    height={500}\n                    header={{\n                        left: \"filter\",\n                        center: \"title\",\n                        right: \"prev, next\",\n                    }}\n                    now={() => new Date(\"2 February 2025 12:30:00 PM\")} // A random Sunday so the current day isn't highlighted\n                    columnHeaderFormat={{ weekday: \"short\" }} //{i => this.getDayOfWeek(i.date.marker)}\n                    titleFormat={() => (this.state.schedules.length === 0 ? \"No Schedules\" : \"Schedule #\" + (this.state.scheduleIndex + 1))}\n                    customButtons={this.getCustomButtons()}\n                    allDaySlot={false}\n                    events={this.createEvents()}\n                    eventClick={this.onEventClick}\n                />\n\n                {this.renderModal()}\n            </React.Fragment>\n        );\n    }\n\n    componentDidMount = async () => {\n        this.generateSchedules();\n    };\n\n    componentDidUpdate = async (prevProps, prevState, snapshot) => {\n        if (prevProps.values.length !== this.props.values.length || prevProps.values.some((v, i) => v !== this.props.values[i])) {\n            await this.generateSchedules();\n        }\n    };\n\n    onEventClick = (info) => {\n        let { classObj } = info.event.extendedProps;\n        this.setState({ classPopup: classObj });\n    };\n\n    renderModal = () => {\n        console.log(this.state.schedules);\n        if (this.state.classPopup !== null) {\n            let classObj = this.state.classPopup;\n            return (\n                <Modal\n                    defaultOpen={true}\n                    onClose={() => {\n                        this.setState({ classPopup: null });\n                    }}\n                >\n                    <Modal.Header>\n                        {classObj.name} - {classObj.course}\n                    </Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <p>\n                                <b>Credits: </b>\n                                {classObj.credits}\n                            </p>\n                            <p>\n                                <b>Instructor{classObj.instructors.length === 1 ? \"\" : \"s\"}: </b>\n                                {classObj.instructors.join(\", \")}\n                            </p>\n                            <p>\n                                <b>Type: </b>\n                                {classObj.type}\n                            </p>\n                        </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Popup\n                            inverted\n                            content={\"Search for professor on ratemyprofessors.com\"}\n                            trigger={\n                                <Button\n                                    color=\"green\"\n                                    onClick={() => window.open(`https://www.ratemyprofessors.com/search.jsp?query=${classObj.instructors[0].split(\" \").pop()} Illinois Institute of Technology`)}\n                                >\n                                    <Icon name=\"student\" /> Search on Rate My Professors\n                                </Button>\n                            }\n                        />\n\n                        <Popup\n                            inverted\n                            content={\"Class capacity, seating, prerequisites, and requirements\"}\n                            trigger={\n                                <Button color=\"purple\" onClick={() => window.open(classObj.link)}>\n                                    <Icon name=\"info\" /> Class Details\n                                </Button>\n                            }\n                        />\n\n                        <Popup\n                            inverted\n                            content=\"Course description and attributes\"\n                            trigger={\n                                <Button color=\"blue\" onClick={() => window.open(classObj.catalog)}>\n                                    <Icon name=\"newspaper outline\" /> Course Catalog\n                                </Button>\n                            }\n                        />\n\n                        <Button color=\"red\" onClick={() => this.setState({ classPopup: null })}>\n                            <Icon name=\"close\" /> Close\n                        </Button>\n                    </Modal.Actions>\n                </Modal>\n            );\n        } else if (this.state.filterPopup !== null) {\n            return (\n                <Modal\n                    defaultOpen={true}\n                    onClose={() => {\n                        this.setState({ filterPopup: null });\n                    }}\n                >\n                    <Modal.Header>Filter/Sort</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <b>Start/End Time:</b>\n                            <MySlider\n                                marks\n                                max={1440}\n                                min={360}\n                                defaultValue={[this.state.filter.min, this.state.filter.max]}\n                                step={30}\n                                valueLabelDisplay=\"auto\"\n                                valueLabelFormat={(x) => this.durationFromMinutes(x, false)}\n                                onChangeCommitted={(e, value) => {\n                                    this.setState({ filter: { ...this.state.filter, min: value[0], max: value[1] } });\n                                    this.generateSchedules();\n                                }}\n                            />\n                            <b>Class Days:</b>\n                            <br></br>\n                            <Checkbox\n                                label=\"M\"\n                                checked={this.state.days.M}\n                                onChange={() => {\n                                    let d = this.state.days;\n                                    d.M = !d.M;\n                                    this.setState({ days: d });\n                                    this.generateSchedules();\n                                }}\n                            />\n                            <Checkbox\n                                label=\"T\"\n                                checked={this.state.days.T}\n                                onChange={() => {\n                                    let d = this.state.days;\n                                    d.T = !d.T;\n                                    this.setState({ days: d });\n                                    this.generateSchedules();\n                                }}\n                            />\n                            <Checkbox\n                                label=\"W\"\n                                checked={this.state.days.W}\n                                onChange={() => {\n                                    let d = this.state.days;\n                                    d.W = !d.W;\n                                    this.setState({ days: d });\n                                    this.generateSchedules();\n                                }}\n                            />\n                            <Checkbox\n                                label=\"R\"\n                                checked={this.state.days.R}\n                                onChange={() => {\n                                    let d = this.state.days;\n                                    d.R = !d.R;\n                                    this.setState({ days: d });\n                                    this.generateSchedules();\n                                }}\n                            />\n                            <Checkbox\n                                label=\"F\"\n                                checked={this.state.days.F}\n                                onChange={() => {\n                                    let d = this.state.days;\n                                    d.F = !d.F;\n                                    this.setState({ days: d });\n                                    this.generateSchedules();\n                                }}\n                            />\n                        </Modal.Description>\n                    </Modal.Content>\n                    {/* <Modal.Actions>\n                        <Popup inverted content={\"Class capacity, seating, prerequisites, and requirements\"} trigger={\n                            <Button color='purple' onClick={() => console.log}>\n                                <Icon name='info' /> Class Details\n                            </Button>\n                        } />\n                    </Modal.Actions> */}\n                </Modal>\n            );\n        } else return <React.Fragment></React.Fragment>;\n    };\n\n    generateSchedules = async () => {\n        let colors = { ...this.state.colors };\n        let loadedCourses = { ...this.props.loadedCourses };\n        let inputtedCourses = this.props.values;\n        let Schedules = [new Schedule()];\n        if (inputtedCourses.length === 0) Schedules = [];\n        for (let course of inputtedCourses) {\n            if (!colors[course]) {\n                colors[course] = this.gc.next().value;\n            }\n            let allNew = [];\n            if (!loadedCourses[course])\n                try {\n                    let fetchedCourse = await (await fetch(`./classes/${course.split(\" \").join(\"-\")}.json`)).json();\n                    loadedCourses[course] = fetchedCourse;\n                } catch (e) {}\n\n            if (loadedCourses[course]) {\n                for (let i in Schedules) {\n                    let sc = Schedules[i];\n                    let newSchedules = sc.addClass({ ...loadedCourses[course] });\n\n                    allNew = [...allNew, ...newSchedules];\n                }\n            }\n            Schedules = allNew;\n            console.log(Schedules.length + ` schedules after adding ${course}`);\n            if (Schedules.length === 0) break;\n        }\n\n        if (Object.keys(this.props.loadedCourses).length !== Object.keys(loadedCourses).length) this.props.handleCourseLoad(loadedCourses);\n        if (this.props.loading) this.props.finishedLoading();\n\n        Schedules = this.filterSchedules(Schedules);\n\n        let equals = true;\n        if (Schedules.length === this.state.schedules.length) {\n            for (let i in Schedules) {\n                if (!Schedules[i].equals(this.state.schedules[i])) {\n                    equals = false;\n                    break;\n                }\n            }\n        } else equals = false;\n\n        if (!equals) {\n            this.scrollToDuration(this.durationFromMinutes(Schedules[0] && Schedules[0].startTime !== 1440 ? Schedules[0].startTime - 120 : 360));\n            this.setState({ schedules: Schedules, scheduleIndex: 0, colors, currentCourses: inputtedCourses });\n        }\n    };\n\n    filterSchedules = (Schedules) => {\n        let f1 = Schedules.filter((s) => s.startTime >= this.state.filter.min && s.endTime <= this.state.filter.max);\n        return f1.filter((s) => {\n            return !s.classes.some((c) => {\n                let days = Object.keys(c.classes);\n                for (let d of days) if (!this.state.days[d]) return true;\n                return false;\n            });\n        });\n    };\n\n    createEvents = () => {\n        if (!this.state.schedules || this.state.schedules.length === 0) return [];\n\n        let schedule = this.state.schedules[this.state.scheduleIndex];\n        let events = [];\n        let days = [\"S\", \"M\", \"T\", \"W\", \"R\", \"F\", \"A\"];\n        let colors = { ...this.state.colors };\n\n        if (!schedule || schedule.length <= 0) return [];\n        for (let course of schedule.classes) {\n            for (let day in course.classes) {\n                let event = {\n                    title: `${course.course} ${course.type} (${course.crn})`,\n                    startTime: this.durationFromMinutes(course.classes[day].start),\n                    endTime: this.durationFromMinutes(course.classes[day].end),\n                    daysOfWeek: [days.indexOf(day)],\n                    color: colors[course.course],\n                    borderColor: colors[course.course],\n                    classNames: [\"calendarEvent\"],\n                    classObj: course,\n                };\n                events.push(event);\n            }\n        }\n        if (Object.keys(this.state.colors).length !== Object.keys(colors).length) this.setState({ colors });\n        events.renderedIndex = this.state.scheduleIndex;\n        return events;\n    };\n\n    getCustomButtons = () => {\n        return {\n            filter: {\n                text: \"Filter/Sort\",\n                click: () => {\n                    this.setState({ filterPopup: true });\n                },\n            },\n            next: {\n                text: \"Next\",\n                click: () => {\n                    let scheduleIndex = this.state.scheduleIndex + 1 < this.state.schedules.length ? this.state.scheduleIndex + 1 : 0;\n                    // this.scrollToDuration(\n                    //     this.durationFromMinutes(\n                    //         this.state.schedules[scheduleIndex] && this.state.schedules[scheduleIndex].startTime !== 1440 ? this.state.schedules[scheduleIndex].startTime - 120 : 360\n                    //     )\n                    // );\n                    this.setState({ scheduleIndex });\n                },\n            },\n            prev: {\n                text: \"Prev\",\n                click: () => {\n                    let scheduleIndex = this.state.scheduleIndex - 1 < 0 ? this.state.schedules.length - 1 : this.state.scheduleIndex - 1;\n                    // this.scrollToDuration(\n                    //     this.durationFromMinutes(\n                    //         this.state.schedules[scheduleIndex] && this.state.schedules[scheduleIndex].startTime !== 1440 ? this.state.schedules[scheduleIndex].startTime - 120 : 360\n                    //     )\n                    // );\n                    this.setState({ scheduleIndex });\n                },\n            },\n        };\n    };\n\n    scrollToDuration = async (duration) => {\n        const numSteps = 25;\n        let currentParts = this.state.scrollTime.split(\":\").map((n) => Number(n));\n        let currentMinutes = 60 * currentParts[0] + currentParts[1];\n        let newParts = duration.split(\":\").map((n) => Number(n));\n        let newMinutes = 60 * newParts[0] + newParts[1];\n\n        let step = (newMinutes - currentMinutes) / numSteps;\n        while (currentMinutes !== newMinutes) {\n            if (step < 0 && currentMinutes <= newMinutes) break;\n            if (step >= 0 && currentMinutes >= newMinutes) break;\n            currentMinutes += step;\n            let newDuration = this.durationFromMinutes(currentMinutes);\n            this.myRef.current.getApi().scrollToTime(newDuration);\n            await new Promise((next) => setTimeout(next, 1));\n        }\n\n        this.myRef.current.getApi().scrollToTime(duration);\n        this.setState({ scrollTime: duration });\n    };\n\n    durationFromMinutes(minutes, includeSeconds = true) {\n        // \"HH:MM:SS\"\n        let hh = Math.floor(minutes / 60);\n        let mm = Math.floor(minutes - hh * 60);\n        return `${hh < 10 ? \"0\" + hh : hh}:${mm < 10 ? \"0\" + mm : mm}${includeSeconds ? \":00\" : \"\"}`;\n    }\n\n    gc = (() => {\n        let generator = function* () {\n            let arr = [];\n            while (arr.length < 5) arr = [...arr, ...[\"#d11141\", \"#00b159\", \"#00aedb\", \"#f37735\", \"#7D27A5\", \"#ffc425\"]];\n            yield* arr.flat();\n        };\n        return generator();\n    })();\n}\n\nexport default Calendar;\n","import React, { Component } from \"react\";\nimport Navigation from \"./Navigation\";\nimport Calendar from \"./Calendar\";\nimport { Segment, Container } from \"semantic-ui-react\";\nclass App extends Component {\n    state = {\n        values: [],\n        loadedCourses: {}, // {\"ECE 100\": {...data}, ... }\n        calendarLoading: true,\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Navigation values={this.state.values} handleValueChange={(values) => this.setState({ values, calendarLoading: true })}></Navigation>\n                <Container style={{ width: \"100%\" }}>\n                    <Segment style={{ width: \"80%\", margin: \"0 auto\", overflowY: \"scroll\" }} compact loading={this.state.calendarLoading}>\n                        <Calendar\n                            finishedLoading={this.onLoadingFinished}\n                            values={this.state.values}\n                            loadedCourses={this.state.loadedCourses}\n                            handleCourseLoad={this.onCoursesLoad}\n                            loading={this.state.calendarLoading}\n                        ></Calendar>\n                    </Segment>\n                </Container>\n            </React.Fragment>\n        );\n    }\n\n    onLoadingFinished = () => {\n        this.setState({ calendarLoading: false });\n    };\n\n    onCoursesLoad = (loadedCourses) => {\n        this.setState({ loadedCourses });\n    };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'semantic-ui-css/semantic.min.css'\nimport App from \"./components/App\";\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}